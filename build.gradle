plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${project.version_lombok}"
        annotationProcessor "org.projectlombok:lombok:${project.version_lombok}"

        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"

        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.17.1:2021.12.12@zip")
        }

        implementation "com.google.code.gson:gson:${project.version_gson}"
        implementation("com.google.guava:guava:${project.version_guava}")
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven { url 'https://maven.parchmentmc.org'}
        maven { url "https://maven.shedaniel.me" }
        maven { url "https://maven.terraformersmc.com" }
        maven { url 'https://masa.dy.fi/maven' }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        flatDir { dirs "./lib" }
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 16
    }

    java {
        withSourcesJar()
    }
}
